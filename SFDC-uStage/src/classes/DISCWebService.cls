//Generated by wsdl2apex

public class DISCWebService {
	
	public final static Global_Constants__c DISCAPIBaseURL = Global_Constants__c.getInstance();
	public final static String DISCWebserviceURL=DISCAPIBaseURL.DISC_URL__c;
	
	public class registerUserResponse_element {
		public String output;
        private String[] output_type_info = new String[]{'output',DISCWebserviceURL,null,'1','1','false'};
        private String[] apex_schema_type_info = new String[]{DISCWebserviceURL,'true','false'};
        private String[] field_order_type_info = new String[]{'output'};
    }
    public class feedDataResponse_element {
        public String output;
        private String[] output_type_info = new String[]{'output',DISCWebserviceURL,null,'1','1','false'};
        private String[] apex_schema_type_info = new String[]{DISCWebserviceURL,'true','false'};
        private String[] field_order_type_info = new String[]{'output'};
    }
    public class candidateResetResponse_element {
        public String output;
        private String[] output_type_info = new String[]{'output',DISCWebserviceURL,null,'1','1','false'};
        private String[] apex_schema_type_info = new String[]{DISCWebserviceURL,'true','false'};
        private String[] field_order_type_info = new String[]{'output'};
    }
    public class registerUserRequest_element {
        public String secreteKey;
        public String data;
        private String[] secreteKey_type_info = new String[]{'secreteKey',DISCWebserviceURL,null,'1','1','false'};
        private String[] data_type_info = new String[]{'data',DISCWebserviceURL,null,'1','1','false'};
        private String[] apex_schema_type_info = new String[]{DISCWebserviceURL,'true','false'};
        private String[] field_order_type_info = new String[]{'secreteKey','data'};
    }
    public class feedDataRequest_element {
        public String secreteKey;
        public String data;
        private String[] secreteKey_type_info = new String[]{'secreteKey',DISCWebserviceURL,null,'1','1','false'};
        private String[] data_type_info = new String[]{'data',DISCWebserviceURL,null,'1','1','false'};
        private String[] apex_schema_type_info = new String[]{DISCWebserviceURL,'true','false'};
        private String[] field_order_type_info = new String[]{'secreteKey','data'};
    }
    public class candidateResetRequest_element {
        public String secreteKey;
        public String data;
        private String[] secreteKey_type_info = new String[]{'secreteKey',DISCWebserviceURL,null,'1','1','false'};
        private String[] data_type_info = new String[]{'data',DISCWebserviceURL,null,'1','1','false'};
        private String[] apex_schema_type_info = new String[]{DISCWebserviceURL,'true','false'};
        private String[] field_order_type_info = new String[]{'secreteKey','data'};
    }
    public class fetchDataResponse_element {
        public String output;
        private String[] output_type_info = new String[]{'output',DISCWebserviceURL,null,'1','1','false'};
        private String[] apex_schema_type_info = new String[]{DISCWebserviceURL,'true','false'};
        private String[] field_order_type_info = new String[]{'output'};
    }
    public class fetchDataRequest_element {
        public String secreteKey;
        public String data;
        private String[] secreteKey_type_info = new String[]{'secreteKey',DISCWebserviceURL,null,'1','1','false'};
        private String[] data_type_info = new String[]{'data',DISCWebserviceURL,null,'1','1','false'};
        private String[] apex_schema_type_info = new String[]{DISCWebserviceURL,'true','false'};
        private String[] field_order_type_info = new String[]{'secreteKey','data'};
    }
    public class PersonalityTestWebServiceAccessPointPort {
        public String endpoint_x = DISCWebserviceURL + 'soap-service.php';
        public Map<String,String> inputHttpHeaders_x;
        public Map<String,String> outputHttpHeaders_x;
        public String clientCertName_x;
        public String clientCert_x;
        public String clientCertPasswd_x;
        public Integer timeout_x;
        private String[] ns_map_type_info = new String[]{DISCWebserviceURL, 'DISCWebService'};
        public String fetchData(String secreteKey,String data) {
            DISCWebService.fetchDataRequest_element request_x = new DISCWebService.fetchDataRequest_element();
            request_x.secreteKey = secreteKey;
            request_x.data = data;
            DISCWebService.fetchDataResponse_element response_x;
            Map<String, DISCWebService.fetchDataResponse_element> response_map_x = new Map<String, DISCWebService.fetchDataResponse_element>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              DISCWebserviceURL + 'soap-service.php#fetchData',
              DISCWebserviceURL,
              'fetchDataRequest',
              DISCWebserviceURL,
              'fetchDataResponse',
              'DISCWebService.fetchDataResponse_element'}
            );
            response_x = response_map_x.get('response_x');
            return response_x.output;
        }
        public String registerUser(String secreteKey,String data) {
            DISCWebService.registerUserRequest_element request_x = new DISCWebService.registerUserRequest_element();
            request_x.secreteKey = secreteKey;
            request_x.data = data;
            DISCWebService.registerUserResponse_element response_x;
            Map<String, DISCWebService.registerUserResponse_element> response_map_x = new Map<String, DISCWebService.registerUserResponse_element>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              DISCWebserviceURL + 'soap-service.php#registerUser',
              DISCWebserviceURL,
              'registerUserRequest',
              DISCWebserviceURL,
              'registerUserResponse',
              'DISCWebService.registerUserResponse_element'}
            );
            response_x = response_map_x.get('response_x');
            return response_x.output;
        }
        public String feedData(String secreteKey,String data) {
            DISCWebService.feedDataRequest_element request_x = new DISCWebService.feedDataRequest_element();
            request_x.secreteKey = secreteKey;
            request_x.data = data;
            DISCWebService.feedDataResponse_element response_x;
            Map<String, DISCWebService.feedDataResponse_element> response_map_x = new Map<String, DISCWebService.feedDataResponse_element>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              DISCWebserviceURL + 'soap-service.php#feedData',
              DISCWebserviceURL,
              'feedDataRequest',
              DISCWebserviceURL,
              'feedDataResponse',
              'DISCWebService.feedDataResponse_element'}
            );
            response_x = response_map_x.get('response_x');
            return response_x.output;
        }
        public String candidateReset(String secreteKey,String data) {
            DISCWebService.candidateResetRequest_element request_x = new DISCWebService.candidateResetRequest_element();
            request_x.secreteKey = secreteKey;
            request_x.data = data;
            DISCWebService.candidateResetResponse_element response_x;
            Map<String, DISCWebService.candidateResetResponse_element> response_map_x = new Map<String, DISCWebService.candidateResetResponse_element>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              DISCWebserviceURL + 'soap-service.php#candidateReset',
              DISCWebserviceURL,
              'candidateResetRequest',
              DISCWebserviceURL,
              'candidateResetResponse',
              'DISCWebService.candidateResetResponse_element'}
            );
            response_x = response_map_x.get('response_x');
            return response_x.output;
        }
    }
}