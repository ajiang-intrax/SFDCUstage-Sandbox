<apex:page standardController="invoiceit_s__Quote__c" extensions="invoiceit_s.CreateQuoteController" tabStyle="invoiceit_s__Quote__c" sidebar="true" showHeader="true"> 
    <style type="text/css">
    .custPopup{
        background-color: white;
        border-width: 2px;
        border-style: solid;
        z-index: 9999;
        left: 50%;
        padding:10px;
        position: absolute;
        /* These are the 3 css properties you will need to change so the popup 
        displays in the center of the screen. First set the width. Then set 
        margin-left to negative half of what the width is. You can add 
        the height property for a fixed size pop up if you want.*/
        width: 890px;
        margin-left: -380px;
        top:75px;
    }
    .popupBackground{
        background-color:black;
        opacity: 0.20;
        filter: alpha(opacity = 20);
        position: absolute;
        width: 100%;
        height: 100%;
        top: 0;
        left: 0;
        z-index: 9998;
    }
    </style>
    
    <script>
        function confirmCancel() {
            var isCancel = confirm("{!$Label.CancellingthiswoulddiscardthechangesPleaseconfirm}");
            if (isCancel) return true;
            return false;
        }
        function addProduct(id,name){
            addProduct(id,name);
            var searchstring = document.getElementById("searchstring");
            searchstring.value = ""
        }
        function noenter(ev)
        {
            if (window.event && window.event.keyCode == 13 || ev.which == 13)
            {
                var ele=document.getElementById(cl);
                ele.click();
                return false;
            }
            else
            {
                return true;
            }
        }  
    $j = jQuery.noConflict();
    $j(document).ready(function() {
        $j("#dialog").dialog({  autoOpen: false, modal: true, position: 'center', width: 190, 
                               height:70, dialogClass: "ui-dialog-no-titlebar ui-dialog-no-padding", resizable: true});
    });
    /*Function to show the modal dialog for jquery*/
    function showDialog(){
        $j("#dialog").dialog("open");
        $j('#dialog').dialog('option', 'position', 'center');
        return false;
    }
    /*Function to hide the modal dialog for jquery*/
    function closeDialog(){
        $j("#dialog").dialog("close");
        return false;
    }
    </script>
    <apex:includeScript value="{!URLFOR($Resource.invoiceit_s__jQuery, '/js/jquery-1.5.1.min.js')}" />
    <apex:includeScript value="{!URLFOR($Resource.invoiceit_s__jQuery, '/js/jquery-ui-1.8.13.custom.min.js')}" />
    <apex:stylesheet value="{!URLFOR($Resource.invoiceit_s__jQuery, '/css/smoothness/jquery-ui-1.8.13.custom.css')}" />
    <apex:sectionHeader title="{!$Label.NewQuote}" subtitle="{!$Label.Step2of3}" />
    <apex:form >
        <apex:actionStatus id="status" onstart="return showDialog()" onstop="return closeDialog()" />
        <apex:actionFunction name="addProduct" action="{!getRatePlansForProduct}"
            rerender="ratePlanSelect,quoterateplancharges,ratePlanSelect" status="status">
            <apex:param name="productId" value="" />
            <apex:param name="productName" value="" />
        </apex:actionFunction>
        <apex:pageBlock >
            <apex:pageBlockButtons >
                <apex:commandButton action="{!step1}" value="{!$Label.ButtonPrevious}" />
                <apex:commandButton action="{!step3}" value="{!$Label.ButtonNext}" />
                <apex:commandButton action="{!cancel}" value="{!$Label.ButtonCancel}" onclick="return confirmCancel()" immediate="true" />
            </apex:pageBlockButtons>
            <apex:panelGrid columns="3">
                <apex:outputLabel value="{!$Label.Search_Products}" />
                <apex:inputText value="{!searchstring}" id="searchString">
                    <c:autoComplete objectname="{!objectname}" searchfields="{!searchfields}"
                        displayfields="{!displayfields}" orderfield="{!orderfield}"
                        autocomplete_textbox="{!$Component.searchstring}" products_Filters="{!sFilterCriteria}" products_Limit="{!sProductsLimit}"/>
                </apex:inputText>
                <img src="/s.gif" alt="Help" class="helpIcon" title="{!$Label.SearchProductsHelpText}"/>
            </apex:panelGrid>
            <apex:pageblockSection id="ratePlanSelect">
                <apex:pageBlockTable value="{!listProductRatePlans}" var="rateplan" rendered="{!isMultipleRatePlans}"
                    style="overflow:auto;height:100px; width:1000px;" id="ratePlansTable">
                    <apex:column >
                        <apex:commandLink styleClass="btn" style="padding:2px 5px 2px 5px; text-decoration:none;"
                            value="{!$Label.ButtonSelect}" action="{!getRatePlanChargesForRatePlan}"
                            rerender="quoterateplancharges,quoteClass,ratePlansTable,ratePlanSelect" status="status">
                            <apex:param name="ratePlanId" value="{!rateplan.Id}" />
                        </apex:commandLink>
                    </apex:column>
                    <apex:column value="{!rateplan.Name}" />
                    <apex:column value="{!rateplan.invoiceit_s__Description__c}" />
                </apex:pageBlockTable>
            </apex:pageblockSection>
         </apex:pageBlock>
        <apex:pageBlock title="{!$Label.QuoteStep2_PB_SelectedProducts}" id="quoterateplancharges">
            <apex:pageMessages id="messages" />           
            <table cellspacing="0" cellpadding="0" border="0" class="list">
                    <thead class="rich-table-thead">
                    <tr class="headerRow">
                        <th colspan="1" scope="col" class="headerRow">
                          <div>
                          </div>
                        </th>
                        <apex:repeat value="{!$ObjectType.invoiceit_s__Quote_Product__c.FieldSets.invoiceit_s__ProductFieldsInStep2}" var="fieldAPI">
                            <th colspan="1" scope="col" class="headerRow">
                                <div>
                                    {!fieldAPI.Label}
                                </div>
                            </th> 
                        </apex:repeat>
                        <th colspan="1" scope="col" class="headerRow">
                          <div>
                          {!$Label.Quantity}
                          </div>
                        </th>
                        <apex:variable value="{!3}" var="rowNum"/>
                        <apex:repeat value="{!$ObjectType.invoiceit_s__Quote_Rate_Plan_Charge__c.FieldSets.invoiceit_s__Quote_Wizard_Step_2}" var="fieldAPI">
                            <th colspan="1" scope="col" class="headerRow">
                                <div>
                                    {!fieldAPI.Label}
                                </div>
                            </th>
                          <apex:variable var="rowNum" value="{!rowNum + 1}"/>   
                        </apex:repeat>
                        <th colspan="1" scope="col" class="headerRow">
                          <div>
                          </div>
                        </th>
                    </tr>
                </thead>
                <tbody>
                    <apex:repeat value="{!quoteClass.quoteProducts}" var="quoteproduct">
                        <apex:repeat value="{!quoteproduct.quoteRatePlans}" var="quoterateplan">
                            <apex:repeat value="{!quoterateplan.quoteRatePlanCharges}" var="quoterateplancharge">
                                <tr onfocus="if (window.hiOn){hiOn(this);}" onblur="if (window.hiOff){hiOff(this);}" onmouseout="if (window.hiOff){hiOff(this);}" onmouseover="if (window.hiOn){hiOn(this);}" class="dataRow even odd first">
                                    <td colspan="1" class="dataCell">
                                       <apex:commandLink styleClass="btn" style="padding:2px 5px 2px 5px; text-decoration:none;" rendered="{!quoterateplancharge.quoterateplancharge.invoiceit_s__Sequence_No__c <= 1}"
                                           value="{!$Label.ButtonRemove}" action="{!removeQuotes}" rerender="quoterateplancharges" status="status" >
                                        <apex:param name="quoteRatePlanId" value="{!quoterateplan.quoterateplan.id}" />
                                        <apex:param name="quoterateplancounter" value="{!quoterateplan.quoteRatePlanCounter}" />
                                        </apex:commandLink>
                                    </td>  
                                    <apex:repeat value="{!$ObjectType.invoiceit_s__Quote_Product__c.FieldSets.invoiceit_s__ProductFieldsInStep2}" var="fieldAPI">
                                        <td colspan="1" class="dataCell">
                                            <apex:inputField value="{!quoteproduct.quoteproduct[fieldAPI]}" rendered="{!quoterateplancharge.quoterateplancharge.invoiceit_s__Sequence_No__c <= 1}"/>
                                        </td>
                                    </apex:repeat>
                                    <td colspan="1" class="dataCell">
                                        <apex:inputField value="{!quoterateplancharge.quoterateplancharge.invoiceit_s__Quantity__c}" required="true" style="width:70px">
                                            <apex:param value="{0,number,0}" />
                                        </apex:inputField>
                                    </td>
                                    <apex:repeat value="{!$ObjectType.invoiceit_s__Quote_Rate_Plan_Charge__c.FieldSets.invoiceit_s__Quote_Wizard_Step_2}" var="fieldAPI">
                                        <td colspan="1" class="dataCell">
                                            <apex:inputField value="{!quoterateplancharge.quoterateplancharge[fieldAPI]}" rendered="{!((fieldAPI == 'invoiceit_s__Unit_Price__c' && quoterateplancharge.quoterateplancharge.invoiceit_s__Is_Product_Editable__c == true && quoterateplancharge.quoterateplancharge.invoiceit_s__Price_Format__c != 'Percentage Pricing') || (fieldAPI == 'invoiceit_s__Percentage_of_other_Charges__c' && quoterateplancharge.quoterateplancharge.invoiceit_s__Is_Product_Editable__c == true && quoterateplancharge.quoterateplancharge.invoiceit_s__Price_Format__c == 'Percentage Pricing') || (fieldAPI == 'Name') || (fieldAPI == 'invoiceit_s__Cost_Price__c' && quoterateplancharge.quoterateplancharge.invoiceit_s__Is_Product_Editable__c == true && quoterateplancharge.quoterateplancharge.invoiceit_s__Price_Format__c != 'Percentage Pricing') || (!BEGINS(fieldAPI,'invoiceit_s__')))}"/>                                            
                                            <apex:outputField value="{!quoterateplancharge.quoterateplancharge[fieldAPI]}" rendered="{!(!((fieldAPI == 'invoiceit_s__Unit_Price__c' && quoterateplancharge.quoterateplancharge.invoiceit_s__Is_Product_Editable__c == true && quoterateplancharge.quoterateplancharge.invoiceit_s__Price_Format__c != 'Percentage Pricing') || (fieldAPI == 'invoiceit_s__Percentage_of_other_Charges__c' && quoterateplancharge.quoterateplancharge.invoiceit_s__Is_Product_Editable__c == true && quoterateplancharge.quoterateplancharge.invoiceit_s__Price_Format__c == 'Percentage Pricing') || (fieldAPI == 'Name') || (fieldAPI == 'invoiceit_s__Cost_Price__c' && quoterateplancharge.quoterateplancharge.invoiceit_s__Is_Product_Editable__c == true && quoterateplancharge.quoterateplancharge.invoiceit_s__Price_Format__c != 'Percentage Pricing') || (!BEGINS(fieldAPI,'invoiceit_s__'))))}"/>                              
                                            
                                            <apex:commandButton value="{!$Label.ButtonViewTier}" action="{!showPopup}" style="float:right;" reRender="tstpopup" rendered="{!fieldAPI == 'invoiceit_s__Unit_Price__c' && (quoterateplancharge.quoterateplancharge.invoiceit_s__Price_Format__c == 'Tiered Pricing' || quoterateplancharge.quoterateplancharge.invoiceit_s__Price_Format__c == 'Volume Pricing')}">            
                                               <apex:param value="{!quoterateplancharge.quoteRatePlanChargeCounter}"  name="quoteRatePlanChargeCounterForTier"/>
                                            </apex:commandButton>
                                        </td>
                                    </apex:repeat>
                                </tr>
                            </apex:repeat>
                        </apex:repeat>
                    </apex:repeat>
                  </tbody>
            </table>
         </apex:pageBlock>
      
      <!-- this is for pop up -->
      <apex:outputPanel id="tstpopup">
        <apex:outputPanel styleClass="popupBackground" layout="block" rendered="{!displayPopUp}"/> 
        <apex:outputPanel styleClass="custPopup" layout="block" rendered="{!displayPopUp}">
        <apex:commandButton style="Float:Right" action="{!saveAndClosePopup}" rerender="tstpopup" image="{!URLFOR($Resource.invoiceit_s__InvoiceIt, '/images/Close_Box_Red.png')}"/>
        <apex:pageBlock >
           <apex:pagemessages id="pm"/>
           <apex:pageblockSection title="{!$Label.Tiers}" >
              <apex:repeat value="{!quoteClass.quoteProducts}" var="quoteproduct" id="start">
                <apex:repeat value="{!quoteproduct.quoteRatePlans}" var="quoterateplan">
                    <apex:repeat value="{!quoterateplan.quoteRatePlanCharges}" var="quoterateplancharge">
                        <apex:outputPanel rendered="{!TEXT(quoterateplancharge.quoteRatePlanChargeCounter) == quoteRatePlanChargeCounterForTier}" style="width:100px">
                            <center>    
                                 <!--
                                    Modified By     : Anil Pinto
                                    Modified Date   : 13 June 2013
                                    JIRA Task       : INVOICEIT-61
                                    Comments        : This new method saveAndClosePopup created as a validations required while saving the tiers
                                 -->
                                <apex:commandButton value="{!$Label.ButtonSaveAndClose}" action="{!saveAndClosePopup}" rerender="tstpopup" rendered="{!quoterateplancharge.quoterateplancharge.invoiceit_s__Is_Product_Editable__c}"/>
                                <apex:commandButton action="{!newTier}" value="Add" reRender="tstpopup" rendered="{!quoterateplancharge.quoterateplancharge.invoiceit_s__Is_Product_Editable__c}"/> 
                                <apex:commandButton action="{!closePopup}" value="Close" reRender="tstpopup" rendered="{!!quoterateplancharge.quoterateplancharge.invoiceit_s__Is_Product_Editable__c}"/> 
                            </center><br/>                       
                            
                            <apex:pageBlockTable value="{!quoterateplancharge.quoteRatePlanChargeTiers}" var="quoteTiers" >
                                <apex:column headerValue="{!$Label.StartUnit}">
                                    <apex:inputField value="{!quoteTiers.quoteRatePlanChargeTier.invoiceit_s__Start_Unit__c}" required="true" rendered="{!quoterateplancharge.quoterateplancharge.invoiceit_s__Is_Product_Editable__c}"/> 
                                    <apex:outputField value="{!quoteTiers.quoteRatePlanChargeTier.invoiceit_s__Start_Unit__c}" rendered="{!!quoterateplancharge.quoterateplancharge.invoiceit_s__Is_Product_Editable__c}"/>
                                </apex:column>    
                                
                                <apex:column headerValue="{!$Label.EndUnit}">
                                    <apex:inputField value="{!quoteTiers.quoteRatePlanChargeTier.invoiceit_s__End_Unit__c}" rendered="{!quoterateplancharge.quoterateplancharge.invoiceit_s__Is_Product_Editable__c}"/>
                                    <apex:outputField value="{!quoteTiers.quoteRatePlanChargeTier.invoiceit_s__End_Unit__c}" rendered="{!!quoterateplancharge.quoterateplancharge.invoiceit_s__Is_Product_Editable__c}"/>
                                </apex:column> 
                                
                                <apex:column headerValue="{!$Label.UnitPrice}">
                                    <apex:inputField value="{!quoteTiers.quoteRatePlanChargeTier.invoiceit_s__Unit_Price__c}" required="true" rendered="{!quoterateplancharge.quoterateplancharge.invoiceit_s__Is_Product_Editable__c}"/>
                                    <apex:outputField value="{!quoteTiers.quoteRatePlanChargeTier.invoiceit_s__Unit_Price__c}" rendered="{!!quoterateplancharge.quoterateplancharge.invoiceit_s__Is_Product_Editable__c}"/>
                                </apex:column> 
                                
                                <apex:column headerValue="{!$Label.UnitCostPrice}">    
                                    <apex:inputField value="{!quoteTiers.quoteRatePlanChargeTier.invoiceit_s__Unit_Cost_Price__c}" rendered="{!quoterateplancharge.quoterateplancharge.invoiceit_s__Is_Product_Editable__c}"/>
                                    <apex:outputField value="{!quoteTiers.quoteRatePlanChargeTier.invoiceit_s__Unit_Cost_Price__c}" rendered="{!!quoterateplancharge.quoterateplancharge.invoiceit_s__Is_Product_Editable__c}"/>
                                </apex:column>     
                                                               
                                <apex:repeat value="{!quoteTierApiNames}" var="key">
                                    <apex:column headerValue="{!key}">    
                                        <apex:variable var="api" value="{!quoteTierApiNames[key]}"/>
                                        <apex:inputField value="{!quoteTiers.quoteRatePlanChargeTier[api]}" rendered="{!quoterateplancharge.quoterateplancharge.invoiceit_s__Is_Product_Editable__c}"/>
                                        <apex:outputField value="{!quoteTiers.quoteRatePlanChargeTier[api]}" rendered="{!!quoterateplancharge.quoterateplancharge.invoiceit_s__Is_Product_Editable__c}"/>
                                    </apex:column>
                                </apex:repeat>
                                
                                <apex:column rendered="{!quoterateplancharge.quoterateplancharge.invoiceit_s__Is_Product_Editable__c}">    
                                    <apex:commandButton value="{!$Label.ButtonRemove}" action="{!removeTier}" immediate="true"  reRender="tstpopup">            
                                       <apex:param value="{!quoteTiers.quoteRatePlanChargeTier.Id}"     name="quoteTierIdToDelete"/>
                                       <apex:param value="{!quoteTiers.quoteRatePlanChargeTierCounter}" name="quoteTierCountertoDelete"/>
                                       <apex:param value="{!quoterateplancharge.quoteRatePlanChargeCounter}" name="quoteRatePlanChargeCounterForTier"/>
                                    </apex:commandButton>
                                </apex:column>     
                            </apex:pageBlockTable>
                        </apex:outputPanel>
                    </apex:repeat>
                </apex:repeat>
              </apex:repeat>
           </apex:pageblockSection>              
        </apex:pageBlock>                         
        </apex:outputPanel>
     </apex:outputPanel>
    <!-- End Of popUp -->  
    
    <!-- This div holds the image that is opened as a popup during processing -->
    <div id="dialog">
        <apex:image value="{!URLFOR($Resource.invoiceit_s__jQuery,'/css/smoothness/images/please_wait.gif')}" />
    </div>
    </apex:form>
</apex:page>