<apex:component controller="invoiceit_s.ControllerAutoComplete">
    <apex:attribute name="methodtobecalled" type="String" description="TODO: Describe me"/>
  <!-- JQuery Files -->
  <apex:includeScript value="{!URLFOR($Resource.invoiceit_s__jQuery, 'js/jquery-1.5.1.min.js')}" />
  <apex:includeScript value="{!URLFOR($Resource.invoiceit_s__jQuery, 'js/jquery-ui-1.8.14.custom.min.js')}" />
  <apex:stylesheet value="{!URLFOR($Resource.invoiceit_s__jQuery,'css/smoothness/jquery-ui-1.8.14.custom.css')}"/>
  <!-- Attributes Required For Component -->
  <apex:attribute name="objectname" description="The object name you want to look for." type="String" required="true"/>
  <apex:attribute name="searchfields" description="Any additional fields you'd like to search and include in the display." type="String" required="false"/>
  <apex:attribute name="displayfields" description="Any combination of fields you'd like to be populated back on the textbox." type="String" required="false"/>
  <apex:attribute name="orderfield" description="A single field to order the results by" type="String" required="false"/>
  <apex:attribute name="autocomplete_textbox" description="The ID for the Autocomplete List Textbox." type="String" required="true"/>
  <apex:attribute name="products_Filters" description="Used For dynamic filtering of products" type="String" required="false" />
  <apex:attribute name="products_Limit" description="Used For dynamic limit of products" type="String" required="false" />
  <style>
       .ui-autocomplete-loading { background: white url({!$Resource.circleIndicator}) right center no-repeat; }
  </style>
  <script type="text/javascript">
    var j$ = jQuery.noConflict();
    j$(document).ready(function() {

        var sObjects;
        var queryTerm;

        j$(esc('{!autocomplete_textbox}')).autocomplete({
            minLength: 2,
            source: function(request, response) {
                        queryTerm = request.term;
                        invoiceit_s.ControllerAutoComplete.findSObjects("{!objectname}", request.term, "{!searchfields}", 
                                                            "{!displayfields}", "{!orderfield}","{!products_Filters}","{!products_Limit}",function(result, event){
                            if(event.type == 'exception') {
                                  alert(event.message);
                            } else {
                                 sObjects = result;
                                 response(sObjects);
                            }
                        });
                   },
            focus: function( event, ui ) {
                    j$(esc('{!autocomplete_textbox}')).val( ui.item.Name__c );
                        return false;
                    },
            select: function( event, ui ) {
                        j$(esc('{!autocomplete_textbox}')).val( ui.item.Name__c );
                        j$(esc('{!autocomplete_textbox}_lkid')).val( ui.item.Id );
                        j$(esc('{!autocomplete_textbox}_lkold')).val( ui.item.Name );
                        return false;
                    },
         })
         .data( "autocomplete" )._renderItem = function( ul, item ) {
            var entry = "<a>";
            j$.each("{!searchfields}".split(",") , function(key, value) {
                if(entry == "<a>"){
                    entry = entry + item[value];
                }else{
                    entry = entry + " - " + item[value];
                }
            });
            
            if("{!displayfields}" != null && j$.trim("{!displayfields}").length > 0){
                j$.each("{!displayfields}".split(",") , function(key, value) {
                    entry = entry + " - " + item[value];
                });            
            }
            entry = entry + "&nbsp;<button onclick='addProduct(\""+item.Id+"\",\""+item.Name__c+"\")'>Add</button>";
            entry = entry + "</a>";
            entry = entry.replace(queryTerm, "<b>" + queryTerm + "</b>");
            return j$( "<li></li>" )
                .data( "item.autocomplete", item )
                .append( entry )
                .appendTo( ul );
        };
    });

    function esc(myid) {
           return '#' + myid.replace(/(:|\.)/g,'\\\\$1');
    }
  </script>
</apex:component>